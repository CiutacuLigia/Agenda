
@page "/utilizators/edit/{Id:int}"
@inject NavigationManager NavigationManager
@using Agenda.Models
@using Agenda.Components.Data

<h1>Editare Utilizator</h1>

@if (utilizator is null)
{
    <p><em>Se încarcă...</em></p>
}
else
{
    <EditForm method="post" Model="utilizator" OnValidSubmit="UpdateUtilizator" FormName="edit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label for="nume" class="form-label">Nume:</label>
            <InputText id="nume" class="form-control" @bind-Value="utilizator.Nume" />
            <ValidationMessage For="() => utilizator.Nume" />
        </div>

        <div class="mb-3">
            <label for="prenume" class="form-label">Prenume:</label>
            <InputText id="prenume" class="form-control" @bind-Value="utilizator.Prenume" />
            <ValidationMessage For="() => utilizator.Prenume" />
        </div>

        <div class="mb-3">
            <label for="telefon" class="form-label">Telefon:</label>
            <InputText id="telefon" class="form-control" @bind-Value="utilizator.Telefon" />
            <ValidationMessage For="() => utilizator.Telefon" />
        </div>

        <div class="mb-3">
            <label for="birthday" class="form-label">Data nașterii:</label>
            <InputDate id="birthday" class="form-control" @bind-Value="utilizator.Birthday" Format="dd/MM/yyyy" />
            <ValidationMessage For="() => utilizator.Birthday" />
        </div>

        <div class="mb-3">
            <label for="observatie" class="form-label">Observație:</label>
            <InputText id="observatie" class="form-control" @bind-Value="utilizator.Observatie" />
            <ValidationMessage For="() => utilizator.Observatie" />
        </div>

        <div class="mb-3">
            <label for="relatie" class="form-label">Relație:</label>
            <InputSelect id="relatie" class="form-control" @bind-Value="utilizator.Relatie">
                <option value="">Selectează...</option>
                <option value="var">Var</option>
                <option value="frate">Frate</option>
                <option value="sora">Soră</option>
                <option value="cumnat">Cumnat</option>
                <option value="cumnata">Cumnată</option>
                <option value="mama">Mamă</option>
                <option value="tata">Tată</option>
                <option value="verisor">Văr</option>
                <option value="verisoara">Vărișoară</option>
                <option value="unchi">Unchi</option>
                <option value="nora">Noră</option>
                <option value="ginere">Ginere</option>
                <option value="cunoștință">Cunoștință</option>
            </InputSelect>
            <ValidationMessage For="() => utilizator.Relatie" />
        </div>

        <button type="submit" class="btn btn-primary">Salvează</button>
        <a href="/utilizators" class="btn btn-secondary ms-2">Anulează</a>
    </EditForm>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private utilizator? utilizator;

    protected override async Task OnInitializedAsync()
    {
        utilizator = await DatabaseHelper.GetUtilizatorByIdAsync(Id);


        if (utilizator is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task UpdateUtilizator()
    {
        if (utilizator is not null)
        {
            await DatabaseHelper.UpdateUtilizator(utilizator);
            NavigationManager.NavigateTo("/utilizators", forceLoad: true);
        }
    }
}
