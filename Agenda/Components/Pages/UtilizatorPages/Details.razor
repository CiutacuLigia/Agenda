@page "/utilizators/details/{Id:int}"
@inject NavigationManager NavigationManager
@using Agenda.Models
@using Agenda.Components.Data

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>Utilizator</h2>
    <hr />
    @if (utilizator is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">Nume</dt>
            <dd class="col-sm-10">@utilizator.Nume</dd>

            <dt class="col-sm-2">Prenume</dt>
            <dd class="col-sm-10">@utilizator.Prenume</dd>

            <dt class="col-sm-2">Telefon</dt>
            <dd class="col-sm-10">@utilizator.Telefon</dd>

            <dt class="col-sm-2">Birthday</dt>
            <dd class="col-sm-10">@utilizator.Birthday?.ToShortDateString()</dd>

            <dt class="col-sm-2">Observatie</dt>
            <dd class="col-sm-10">@utilizator.Observatie</dd>
        </dl>
        <div>
            <a href="@($"utilizators/edit/{utilizator.Id}")">Edit</a>  |
            <a href="@($"/utilizators")">Back to List</a>
        </div>
    }
</div>

@code {
    
    private utilizator? utilizator;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var utilizatori = await DatabaseHelper.GetAllUtilizatoriAsync();
        utilizator = utilizatori.FirstOrDefault(u => u.Id == Id);

        if (utilizator is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
